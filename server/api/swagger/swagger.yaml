swagger: "2.0"
info:
  version: "0.1.0"
  title: Lit Hub API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /api
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

securityDefinitions:
  Bearer:
    description: "For accessing the API a valid JWT token must be passed in all the queries in the 'Authorization' header. A valid JWT token is generated by the API and returned as answer of a call to the route /api/auth/login giving a valid user & password. The following syntax must be used in the 'Authorization' header: Bearer: xxxxxx.yyyyyyy.zzzzzz"
    type: apiKey
    name: Authorization
    in: 'header'

paths:
  /auth/login:
    x-swagger-router-controller: Auth
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Returns a valid web token to use with subsequent requests
      operationId: 'login'
      parameters:
      - name: email
        in: 'formData'
        description: User email
        required: true
        type: string
      - name: password
        in: 'formData'
        description: Password
        required: true
        type: string
        format: password
      responses:
        "200":
          description: Authentication Token
          schema:
            $ref: "#/definitions/Token"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /auth/signup:
    x-swagger-router-controller: SignUp
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Registers a user in the system
      parameters:
      - name: username
        in: 'formData'
        description: Username in the system
        required: true
        type: string
      - name: name
        in: 'formData'
        description: User's real name
        type: string
      - name: email
        in: 'formData'
        description: User email
        required: true
        type: string
      - name: password
        in: 'formData'
        description: Password
        required: true
        type: string
        format: password
      responses:
        "201":
          description: Authentication Token
          schema:
            $ref: "#/definitions/Token"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /resources:
    x-swagger-router-controller: Resource
    get:
      security:
      - Bearer: []
      description: Returns a paginated list of books, articles and/or quotes that users have read sorted by their modification date by default (unless a tag filter is specified)
      # used as the method name of the controller
      operationId: 'getAll'
      parameters:
        - name: filter
          in: query
          description: Tag filter for the books, articles and/or quotes
          required: false
          type: string
      responses:
        "200":
          description: Array of literary works
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Resource"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

    post:
      description: "Add a new resource"
      operationId: "create"
      parameters:
        - name: resource
          in: body
          description: "The resource object to be added"
          required: true
          schema:
            $ref: "#/definitions/Resource"
      responses:
        '201':
          description: "Resource successfully added"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

  /resources/{id}:
    x-swagger-router-controller: Resource
    get:
      description: Get a single resource item by its ID
      operationId: "findById"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the resource to get"
        required: true
        type: string
      responses:
        '200':
          description: Literary resource
          schema:
            $ref: "#/definitions/Resource"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

    put:
      description: "Update a resource item"
      operationId: "updateById"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the resource to update"
        required: true
        type: string
      - name: "updated_resource"
        in: "body"
        description: "Updated resource"
        required: true
        schema:
            $ref: "#/definitions/Resource"
      responses:
        "201":
          description: "Literary resource updated"
          schema:
            $ref: "#/definitions/Resource"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"

    delete:
      description: "Delete a resource item"
      operationId: "deleteById"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the resource to delete"
        required: true
        type: string
      responses:
        "204":
          description: "Literary resource successfully deleted"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"


  /resources/latest:
    x-swagger-router-controller: ResourceList
    get:
      description: "Returns the 10 latest books, articles and/or quotes that users have read sorted by their modification date by default (unless a tag filter is specified)"
      # used as the method name of the controller
      operationId: "getLatest"
      parameters:
        - name: filter
          in: query
          description: "Tag filter for the books, articles and/or quotes"
          required: false
          type: string
      responses:
        "200":
          description: "Array of literary works"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Resource"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:

  Error:
    type: object
    required:
    - message
    properties:
      message:
        type: string
      errors:
        type: object

  Resource:
    type: "object"
    properties:
      _id:
        type: "string"
        description: "ID of the literary work"
      type:
        type: "string"
        description: "Type of literary resource: book, article or quote"
      title:
        type: "string"
        description: "Title of a book or article or the text for a quote"
      authors:
        type: "array"
        items: {
          type: "string"
        }
        description: "List of authors of the literary work"
      readBy:
        type: "array"
        items: {
          type: "string"
        }
        description: "List of IDs of all the users that have read this literary work"

  Token:
    type: object
    properties:
     token:
      type: string
